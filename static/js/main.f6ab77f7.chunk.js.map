{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","a","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","background","rows","newText","toUpperCase","showAlert","toLowerCase","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","toogle","document","getElementById","textContent","innerHTML","cancel","select","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","App","setMode","setAlert","message","setTimeout","AboutText","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.f6ab77f7.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n  \r\n          <li className=\"nav-item\">\r\n            <a a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n  \r\n          {/* <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">{props.AboutText}</Link>\r\n          </li> */}\r\n\r\n        </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-primary\" type=\"submit\">Search</button> */}\r\n\r\n          <div className={`form-check form-switch text-${props.mode === 'light' ? \"dark\" : \"light\"}`}>\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n          </div>\r\n       \r\n      </div>\r\n    </div>\r\n   </nav>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);  \r\n        props.showAlert(\"Converted to UpperCase!\" , \"success\");     \r\n    }\r\n\r\n    const handleLoClick = () => {     \r\n        let newText = text.toLowerCase();\r\n        setText(newText);  \r\n        props.showAlert(\"Converted to LowerCase!\" , \"success\");   \r\n    }\r\n\r\n    const handleClearClick = () => {     \r\n        let newText = (\"\");\r\n        setText(newText);  \r\n        props.showAlert(\"Clear your text!\" , \"success\");    \r\n    }\r\n\r\n      const speak = () => {\r\n        let msg = new SpeechSynthesisUtterance(text);\r\n        window.speechSynthesis.speak(msg);\r\n        const toogle = document.getElementById('toggle')\r\n        if (toogle.textContent === \"Speak\") {\r\n            toogle.innerHTML = \"Stop\"\r\n        }\r\n        else {\r\n            toogle.innerHTML = \"Speak\"\r\n            if (toogle.innerHTML = \"Speak\"){\r\n                window.speechSynthesis.cancel()\r\n            }\r\n        }\r\n        props.showAlert(\"Converted to Voice!\" , \"success\");\r\n    }\r\n    const handleCopy = () => {\r\n    let text = document.getElementById(\"MyBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to Clipboard!\" , \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\" , \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n   <div className='container' style={{color: props.mode === 'dark' ? \"white\" : \"#042743\"}}>\r\n    <h1>{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{background: props.mode==='dark' ? '#042743' : 'white', color: props.mode === 'dark' ? \"white\" : \"#042743\"}} \r\n    id=\"MyBox\" rows=\"8\"></textarea>\r\n    </div>\r\n    <button className=\"btn btn-warning mx-2 my-2\"onClick={handleUpClick}>Convert to Uppercase</button>\r\n    <button className=\"btn btn-warning mx-2\"onClick={handleLoClick}>Convert to Lowercase</button>\r\n    <button className=\"btn btn-warning mx-2\"onClick={handleClearClick}>Clear Text</button>\r\n    <button type=\"submit\" onClick={speak} className=\"btn btn-warning mx-2 my-2\" id=\"toggle\">Speak</button>\r\n    <button className=\"btn btn-warning mx-2\"onClick={handleCopy}>Text Copy</button>\r\n    <button className=\"btn btn-warning mx-2\"onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n   </div>\r\n   <div className=\"container my-3\" style={{color: props.mode === 'dark' ? \"white\" : \"#042743\"}}>\r\n    <h1>Your text summary</h1>\r\n    <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n    <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n    <h2>Preview</h2>\r\n    <p>{text.length > 0 ? text: \"Enter Something in the textbox above to preview it here\"}</p>\r\n   </div>\r\n   </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n  \r\n","import React from 'react'\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n  return (\r\n   props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n   </div>\r\n    \r\n   )\r\n  }\r\nexport default  Alert \r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {BrowserRouter as Router, Routes , Route} from 'react-router-dom'\n\n\nfunction App() {\n \n  const [mode, setMode] = useState('light');  // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n\n  return (\n    <>\n  {/* <Router> */}\n     <Navbar title = \"TextUtils\" AboutText = \"About\" mode = {mode} toggleMode = {toggleMode} />\n     <Alert alert={alert}/>\n     <div className=\"container my-3\"> \n     {/* <Routes> */}\n      {/* <Route exact path='/about' element={<About/>}>\n      </Route> */}\n\n      {/* <Route exact path='/'  */}\n      {/* element={ */}\n        <TextForm showAlert = {showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n        {/* }> */}\n        \n      {/* </Route> */}\n\n      {/* </Routes>    */}\n    </div>\n    {/* </Router> */}\n    </>\n  );  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}